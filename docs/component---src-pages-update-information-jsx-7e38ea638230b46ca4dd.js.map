{"version":3,"sources":["webpack:///./src/pages/update-information.jsx"],"names":["location","posts","data","allMarkdownRemark","edges","baseTitle","useSiteMetadata","title","pathname","DynamicHelmet","description","underline","length","filter","post","node","frontmatter","map","key","id","query"],"mappings":"2FAAA,8IAWe,sBAAyB,IAAtBA,EAAqB,EAArBA,SACDC,EADsB,EAAXC,KACIC,kBAAtBC,MAGFC,EAFOC,cAEUC,MAGvB,OACE,kBAAC,IAAD,CAAMC,SAAUR,EAASQ,UACtBC,YAAc,CAAEF,MANP,SAMcF,YAAWK,YAJnB,6BAMhB,iCACE,kBAAC,IAAD,CAASC,WAAS,GAAlB,UAECV,EAAMW,OACLX,EACGY,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,YAAYT,MAAMK,OAAS,KACpDK,KAAI,gBAASH,EAAT,EAAGC,KAAH,OAAoB,kBAAC,IAAD,CAAaD,KAAMA,EAAMI,IAAKJ,EAAKK,QAE9D,kBAAC,IAAD,wBAOH,IAAMC,EAAK","file":"component---src-pages-update-information-jsx-7e38ea638230b46ca4dd.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { DynamicHelmet } from '../utilities/dynamicHelmet'\nimport { useSiteMetadata } from '../hooks/useSiteMetadata'\nimport { Base } from '../components/layouts/Base'\nimport { ArticleLink } from '../components/ArticleLink'\nimport { Heading } from '../components/atoms/Heading'\nimport { Text } from '../components/atoms/Text'\n\n// eslint-disable-next-line react/display-name\nexport default ({ location, data }) => {\n  const { edges: posts } = data.allMarkdownRemark\n  const meta = useSiteMetadata()\n  const title = '更新情報一覧'\n  const baseTitle = meta.title\n  const description = '個人で作成しているものの更新情報一覧ページです。'\n\n  return (\n    <Base pathname={location.pathname}>\n      {DynamicHelmet({ title, baseTitle, description })}\n\n      <section>\n        <Heading underline>更新情報一覧</Heading>\n\n        {posts.length ? (\n          posts\n            .filter(post => post.node.frontmatter.title.length > 0)\n            .map(({ node: post }) => <ArticleLink post={post} key={post.id} />)\n        ) : (\n          <Text>記事が一つもありません。</Text>\n        )}\n      </section>\n    </Base>\n  )\n}\n\nexport const query = graphql`\n  query UpdateInformationQuery {\n    allMarkdownRemark(\n      filter: { fields: { slug: { articleType: { eq: \"update-information\" } } } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            excerpt\n          }\n          fields {\n            slug {\n              slugPath\n              articleType\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}